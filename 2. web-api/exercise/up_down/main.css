
/* reset */
a {
    color: inherit;
    text-decoration: none;
}


/* common layout */
.wrapper {
    font-size: 15px;
    /* body 대용으로 쓰려고 만든 wrapper라서 컨텐츠 있는 만큼만 준다. */
    background: #8c8c8c;
    /* 의도적으로 화면 전체로 채우기. */
    height: 100vh;

    position: relative;
}

/* section.main */
section.main {
    width: 40%;
    background: #f6f6f6;

    position: absolute;
    left: 50%;
    top: 50%;
    transform: translate(-50%, -50%);

    border-radius: 10px;
    box-shadow: 1px 1px 5px rgba(0, 0, 0, 0.7);
    /* 자식이 넘치는 영역을 숨겨라. */
    overflow: hidden;
}

section.main .main-title {
    font-size: 30px;
    font-weight: bold;
    background: #a3f8ff;
    text-align: center;
    padding: 30px 20px;
    border-bottom: 1px solid #d3d3d3;
}

section.main .number-wrapper {
    padding: 50px 20px;
}

section.main .number-wrapper h2 {
    font-size: 22px;
    text-align: center;
    text-decoration: underline;
}

section.main .number-wrapper h2 em {
    font-size: 1.2em;
    font-weight: 700;
    color: #f00;
}

#numbers {
    width: 70%;
    height: 400px;
    border: 1px solid #000;
    border-radius: 10px;
    margin: 30px auto 0;
    padding: 30px 0 30px 50px;

    /* 길이를 넘치면 스크롤을 만들어라. */
    overflow: auto;

    display: flex;
    /* 한줄로 쭉 붙어있지 말고 줄바꿈해서 떨어지게 */
    flex-wrap: wrap;
}

#numbers .icon {
    width: 90px;
    height: 90px;
    border-radius: 50%;
    font-size: 32px;
    font-weight: 700;
    color: #fff;
    background: #000;

    /* 텍스트 중앙 정렬 */
    /* 이거 말고도 세로 사이즈를 똑같이 맞추고 line-height를 똑같이 한 후, text-align: center;도 가능. */
    display: flex;
    justify-content: center;
    align-items: center;
    margin-right: 5%;
    margin-bottom: 10px;
    /* 손 모양을 만들어주자. */
    cursor: pointer;
}

#numbers .icon:hover {
    /* 마우스 올렸을 때 살짝 커지면서 투명하게! */
    transform: scale(1.1);
    opacity: 0.7;
}

#numbers .icon:nth-child(4n + 1) {
    background: orange;
}

#numbers .icon:nth-child(4n + 2) {
    background: skyblue;
}

#numbers .icon:nth-child(4n + 3) {
    background: yellowgreen;
}

#numbers .icon:nth-child(4n) {
    background: orangered;
}

/* aside.result */
.result {
    position: absolute;
    right: 20%;
    top: 40%;
    transform: translate(-50%);
}

.result div {
    width: 150px;
    height: 150px;
    border-radius: 50%;
    font-size: 30px;
    font-weight: 700;
    color: #fff;
    margin-bottom: 30px;
    display: flex;
    justify-content: center;
    align-items: center;
    /* background: #000; */

    cursor: pointer;
}

#up {
    background: #f00;
}

#down {
    background: #00f;
}

.result div.selected {
    animation: jump 0.3s infinite linear alternate;
}

@keyframes jump {
    /* 포지션으로 움직이면 영원히 보내버리는 것이다. */
    /* 애니메이션의 경우는 다시 돌아와야 하기 때문에 translate로 쓴다. */
    0% {
        transform: translateY(0);
    }
    50% {
        transform: translateY(-10px);
    }
    100% {
        transform: translateY(-20px);
    }
}

/* #finish */
#finish {
    width: 60%;
    height: 200px;
    background: tomato;
    font-size: 80px;
    font-weight: 700;
    border: 2px solid #000;
    border-radius: 20px;
    text-align: center;
    line-height: 200px;

    position: absolute;
    left: 50%;
    top: 50%;
    transform: translate(-50%, -50%);
    
    /* 제일 뒤로 넘겨버리기 아래의 이유들로 */
    z-index: -100;

    /* 
        처음은 display:none이 아니라 애니메이션 효과에 의해 투명했다가 나오네? 
        근데 그러면 이 축하멘트 박스가 앞에 나와있는거 때문에 뒤에 있는 원들이 클릭이 안됨.
    */
    opacity: 0;
}

#finish.show {
    /* 
        forwards를 쓰지 않으면 애니메이션이 나왔다가 나중에 기존상태로 돌아감
        여기서의 기존 상태는 투명도: 0에 제일 뒤에 숨어있는 구조.
        fowards를 쓰면 애니메이션이 진행된 100%에서 동작을 멈춤.
    */
    /* 교안 애니메이션 fill-mode 10페이지 */
    animation: drop 1s linear forwards;
}

@keyframes drop {
    0% {
        opacity: 0;
        top: -50%;
    }
    50% {
        opacity: 0.5;
        top: 0;
    }
    100% {
        opacity: 1;
        z-index: 100;
        top: 50%;
    }
}

/* 정답아이콘에 id=move가 붙으면 아이콘이 이동하는 애니메이션 */
.icon#move {
    position: absolute;
    left: 50%;
    top: 10%;
    z-index: 50;
    border: 4px dashed #000;
    animation: move 1s linear forwards;
}

@keyframes move {
    0% {
        top: 0;
        transform: scale(1) rotate(0) translate(0); 
    }
    100% {
        top: 10%;
        transform: scale(2) rotate(720deg) translate(-50%);
    }
}